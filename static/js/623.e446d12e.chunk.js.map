{"version":3,"file":"static/js/623.e446d12e.chunk.js","mappings":"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","sources":["../node_modules/@motionone/dom/dist/gestures/resize/handle-element.es.js","../node_modules/@motionone/dom/dist/utils/resolve-elements.es.js","../node_modules/@motionone/dom/dist/gestures/resize/handle-window.es.js","../node_modules/@motionone/utils/dist/is-function.es.js","../node_modules/@motionone/dom/dist/gestures/resize/index.es.js","../node_modules/@motionone/utils/dist/progress.es.js","../node_modules/@motionone/dom/dist/gestures/scroll/info.es.js","../node_modules/@motionone/utils/dist/velocity.es.js","../node_modules/@motionone/utils/dist/noop.es.js","../node_modules/@motionone/utils/dist/mix.es.js","../node_modules/@motionone/utils/dist/offset.es.js","../node_modules/@motionone/utils/dist/is-number.es.js","../node_modules/@motionone/utils/dist/easing.es.js","../node_modules/@motionone/utils/dist/is-easing-list.es.js","../node_modules/@motionone/utils/dist/wrap.es.js","../node_modules/@motionone/utils/dist/clamp.es.js","../node_modules/@motionone/dom/dist/gestures/scroll/offsets/presets.es.js","../node_modules/@motionone/utils/dist/is-string.es.js","../node_modules/@motionone/dom/dist/gestures/scroll/offsets/edge.es.js","../node_modules/@motionone/dom/dist/gestures/scroll/offsets/offset.es.js","../node_modules/@motionone/dom/dist/gestures/scroll/offsets/index.es.js","../node_modules/@motionone/dom/dist/gestures/scroll/offsets/inset.es.js","../node_modules/@motionone/utils/dist/interpolate.es.js","../node_modules/@motionone/dom/dist/gestures/scroll/on-scroll-handler.es.js","../node_modules/@motionone/dom/dist/gestures/scroll/index.es.js","../node_modules/framer-motion/dist/es/value/use-scroll.mjs","../node_modules/framer-motion/dist/es/value/use-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-on-change.mjs","../node_modules/framer-motion/dist/es/value/use-spring.mjs"],"sourcesContent":["import { resolveElements } from '../../utils/resolve-elements.es.js';\n\nconst resizeHandlers = new WeakMap();\nlet observer;\nfunction getElementSize(target, borderBoxSize) {\n    if (borderBoxSize) {\n        const { inlineSize, blockSize } = borderBoxSize[0];\n        return { width: inlineSize, height: blockSize };\n    }\n    else if (target instanceof SVGElement && \"getBBox\" in target) {\n        return target.getBBox();\n    }\n    else {\n        return {\n            width: target.offsetWidth,\n            height: target.offsetHeight,\n        };\n    }\n}\nfunction notifyTarget({ target, contentRect, borderBoxSize, }) {\n    var _a;\n    (_a = resizeHandlers.get(target)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => {\n        handler({\n            target,\n            contentSize: contentRect,\n            get size() {\n                return getElementSize(target, borderBoxSize);\n            },\n        });\n    });\n}\nfunction notifyAll(entries) {\n    entries.forEach(notifyTarget);\n}\nfunction createResizeObserver() {\n    if (typeof ResizeObserver === \"undefined\")\n        return;\n    observer = new ResizeObserver(notifyAll);\n}\nfunction resizeElement(target, handler) {\n    if (!observer)\n        createResizeObserver();\n    const elements = resolveElements(target);\n    elements.forEach((element) => {\n        let elementHandlers = resizeHandlers.get(element);\n        if (!elementHandlers) {\n            elementHandlers = new Set();\n            resizeHandlers.set(element, elementHandlers);\n        }\n        elementHandlers.add(handler);\n        observer === null || observer === void 0 ? void 0 : observer.observe(element);\n    });\n    return () => {\n        elements.forEach((element) => {\n            const elementHandlers = resizeHandlers.get(element);\n            elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.delete(handler);\n            if (!(elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.size)) {\n                observer === null || observer === void 0 ? void 0 : observer.unobserve(element);\n            }\n        });\n    };\n}\n\nexport { resizeElement };\n","function resolveElements(elements, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = document.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = document.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","const windowCallbacks = new Set();\nlet windowResizeHandler;\nfunction createWindowResizeHandler() {\n    windowResizeHandler = () => {\n        const size = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n        const info = {\n            target: window,\n            size,\n            contentSize: size,\n        };\n        windowCallbacks.forEach((callback) => callback(info));\n    };\n    window.addEventListener(\"resize\", windowResizeHandler);\n}\nfunction resizeWindow(callback) {\n    windowCallbacks.add(callback);\n    if (!windowResizeHandler)\n        createWindowResizeHandler();\n    return () => {\n        windowCallbacks.delete(callback);\n        if (!windowCallbacks.size && windowResizeHandler) {\n            windowResizeHandler = undefined;\n        }\n    };\n}\n\nexport { resizeWindow };\n","const isFunction = (value) => typeof value === \"function\";\n\nexport { isFunction };\n","import { resizeElement } from './handle-element.es.js';\nimport { resizeWindow } from './handle-window.es.js';\nimport { isFunction } from '@motionone/utils';\n\nfunction resize(a, b) {\n    return isFunction(a) ? resizeWindow(a) : resizeElement(a, b);\n}\n\nexport { resize };\n","const progress = (min, max, value) => max - min === 0 ? 1 : (value - min) / (max - min);\n\nexport { progress };\n","import { progress, velocityPerSecond } from '@motionone/utils';\n\n/**\n * A time in milliseconds, beyond which we consider the scroll velocity to be 0.\n */\nconst maxElapsed = 50;\nconst createAxisInfo = () => ({\n    current: 0,\n    offset: [],\n    progress: 0,\n    scrollLength: 0,\n    targetOffset: 0,\n    targetLength: 0,\n    containerLength: 0,\n    velocity: 0,\n});\nconst createScrollInfo = () => ({\n    time: 0,\n    x: createAxisInfo(),\n    y: createAxisInfo(),\n});\nconst keys = {\n    x: {\n        length: \"Width\",\n        position: \"Left\",\n    },\n    y: {\n        length: \"Height\",\n        position: \"Top\",\n    },\n};\nfunction updateAxisInfo(element, axisName, info, time) {\n    const axis = info[axisName];\n    const { length, position } = keys[axisName];\n    const prev = axis.current;\n    const prevTime = info.time;\n    axis.current = element[\"scroll\" + position];\n    axis.scrollLength = element[\"scroll\" + length] - element[\"client\" + length];\n    axis.offset.length = 0;\n    axis.offset[0] = 0;\n    axis.offset[1] = axis.scrollLength;\n    axis.progress = progress(0, axis.scrollLength, axis.current);\n    const elapsed = time - prevTime;\n    axis.velocity =\n        elapsed > maxElapsed ? 0 : velocityPerSecond(axis.current - prev, elapsed);\n}\nfunction updateScrollInfo(element, info, time) {\n    updateAxisInfo(element, \"x\", info, time);\n    updateAxisInfo(element, \"y\", info, time);\n    info.time = time;\n}\n\nexport { createScrollInfo, updateScrollInfo };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","const noop = () => { };\nconst noopReturn = (v) => v;\n\nexport { noop, noopReturn };\n","const mix = (min, max, progress) => -progress * min + progress * max + min;\n\nexport { mix };\n","import { mix } from './mix.es.js';\nimport { progress } from './progress.es.js';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\nfunction defaultOffset(length) {\n    const offset = [0];\n    fillOffset(offset, length - 1);\n    return offset;\n}\n\nexport { defaultOffset, fillOffset };\n","const isNumber = (value) => typeof value === \"number\";\n\nexport { isNumber };\n","import { isEasingList } from './is-easing-list.es.js';\nimport { wrap } from './wrap.es.js';\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingList(easing)\n        ? easing[wrap(0, easing.length, i)]\n        : easing;\n}\n\nexport { getEasingForSegment };\n","import { isNumber } from './is-number.es.js';\n\nconst isEasingList = (easing) => Array.isArray(easing) && !isNumber(easing[0]);\n\nexport { isEasingList };\n","const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","const ScrollOffset = {\n    Enter: [\n        [0, 1],\n        [1, 1],\n    ],\n    Exit: [\n        [0, 0],\n        [1, 0],\n    ],\n    Any: [\n        [1, 0],\n        [0, 1],\n    ],\n    All: [\n        [0, 0],\n        [1, 1],\n    ],\n};\n\nexport { ScrollOffset };\n","const isString = (value) => typeof value === \"string\";\n\nexport { isString };\n","import { isString, isNumber } from '@motionone/utils';\n\nconst namedEdges = {\n    start: 0,\n    center: 0.5,\n    end: 1,\n};\nfunction resolveEdge(edge, length, inset = 0) {\n    let delta = 0;\n    /**\n     * If we have this edge defined as a preset, replace the definition\n     * with the numerical value.\n     */\n    if (namedEdges[edge] !== undefined) {\n        edge = namedEdges[edge];\n    }\n    /**\n     * Handle unit values\n     */\n    if (isString(edge)) {\n        const asNumber = parseFloat(edge);\n        if (edge.endsWith(\"px\")) {\n            delta = asNumber;\n        }\n        else if (edge.endsWith(\"%\")) {\n            edge = asNumber / 100;\n        }\n        else if (edge.endsWith(\"vw\")) {\n            delta = (asNumber / 100) * document.documentElement.clientWidth;\n        }\n        else if (edge.endsWith(\"vh\")) {\n            delta = (asNumber / 100) * document.documentElement.clientHeight;\n        }\n        else {\n            edge = asNumber;\n        }\n    }\n    /**\n     * If the edge is defined as a number, handle as a progress value.\n     */\n    if (isNumber(edge)) {\n        delta = length * edge;\n    }\n    return inset + delta;\n}\n\nexport { namedEdges, resolveEdge };\n","import { isNumber, isString } from '@motionone/utils';\nimport { resolveEdge, namedEdges } from './edge.es.js';\n\nconst defaultOffset = [0, 0];\nfunction resolveOffset(offset, containerLength, targetLength, targetInset) {\n    let offsetDefinition = Array.isArray(offset) ? offset : defaultOffset;\n    let targetPoint = 0;\n    let containerPoint = 0;\n    if (isNumber(offset)) {\n        /**\n         * If we're provided offset: [0, 0.5, 1] then each number x should become\n         * [x, x], so we default to the behaviour of mapping 0 => 0 of both target\n         * and container etc.\n         */\n        offsetDefinition = [offset, offset];\n    }\n    else if (isString(offset)) {\n        offset = offset.trim();\n        if (offset.includes(\" \")) {\n            offsetDefinition = offset.split(\" \");\n        }\n        else {\n            /**\n             * If we're provided a definition like \"100px\" then we want to apply\n             * that only to the top of the target point, leaving the container at 0.\n             * Whereas a named offset like \"end\" should be applied to both.\n             */\n            offsetDefinition = [offset, namedEdges[offset] ? offset : `0`];\n        }\n    }\n    targetPoint = resolveEdge(offsetDefinition[0], targetLength, targetInset);\n    containerPoint = resolveEdge(offsetDefinition[1], containerLength);\n    return targetPoint - containerPoint;\n}\n\nexport { resolveOffset };\n","import { interpolate, defaultOffset } from '@motionone/utils';\nimport { calcInset } from './inset.es.js';\nimport { ScrollOffset } from './presets.es.js';\nimport { resolveOffset } from './offset.es.js';\n\nconst point = { x: 0, y: 0 };\nfunction resolveOffsets(container, info, options) {\n    let { offset: offsetDefinition = ScrollOffset.All } = options;\n    const { target = container, axis = \"y\" } = options;\n    const lengthLabel = axis === \"y\" ? \"height\" : \"width\";\n    const inset = target !== container ? calcInset(target, container) : point;\n    /**\n     * Measure the target and container. If they're the same thing then we\n     * use the container's scrollWidth/Height as the target, from there\n     * all other calculations can remain the same.\n     */\n    const targetSize = target === container\n        ? { width: container.scrollWidth, height: container.scrollHeight }\n        : { width: target.clientWidth, height: target.clientHeight };\n    const containerSize = {\n        width: container.clientWidth,\n        height: container.clientHeight,\n    };\n    /**\n     * Reset the length of the resolved offset array rather than creating a new one.\n     * TODO: More reusable data structures for targetSize/containerSize would also be good.\n     */\n    info[axis].offset.length = 0;\n    /**\n     * Populate the offset array by resolving the user's offset definition into\n     * a list of pixel scroll offets.\n     */\n    let hasChanged = !info[axis].interpolate;\n    const numOffsets = offsetDefinition.length;\n    for (let i = 0; i < numOffsets; i++) {\n        const offset = resolveOffset(offsetDefinition[i], containerSize[lengthLabel], targetSize[lengthLabel], inset[axis]);\n        if (!hasChanged && offset !== info[axis].interpolatorOffsets[i]) {\n            hasChanged = true;\n        }\n        info[axis].offset[i] = offset;\n    }\n    /**\n     * If the pixel scroll offsets have changed, create a new interpolator function\n     * to map scroll value into a progress.\n     */\n    if (hasChanged) {\n        info[axis].interpolate = interpolate(defaultOffset(numOffsets), info[axis].offset);\n        info[axis].interpolatorOffsets = [...info[axis].offset];\n    }\n    info[axis].progress = info[axis].interpolate(info[axis].current);\n}\n\nexport { resolveOffsets };\n","function calcInset(element, container) {\n    let inset = { x: 0, y: 0 };\n    let current = element;\n    while (current && current !== container) {\n        if (current instanceof HTMLElement) {\n            inset.x += current.offsetLeft;\n            inset.y += current.offsetTop;\n            current = current.offsetParent;\n        }\n        else if (current instanceof SVGGraphicsElement && \"getBBox\" in current) {\n            const { top, left } = current.getBBox();\n            inset.x += left;\n            inset.y += top;\n            /**\n             * Assign the next parent element as the <svg /> tag.\n             */\n            while (current && current.tagName !== \"svg\") {\n                current = current.parentNode;\n            }\n        }\n    }\n    return inset;\n}\n\nexport { calcInset };\n","import { mix } from './mix.es.js';\nimport { noopReturn } from './noop.es.js';\nimport { fillOffset, defaultOffset } from './offset.es.js';\nimport { progress } from './progress.es.js';\nimport { getEasingForSegment } from './easing.es.js';\nimport { clamp } from './clamp.es.js';\n\nfunction interpolate(output, input = defaultOffset(output.length), easing = noopReturn) {\n    const length = output.length;\n    /**\n     * If the input length is lower than the output we\n     * fill the input to match. This currently assumes the input\n     * is an animation progress value so is a good candidate for\n     * moving outside the function.\n     */\n    const remainder = length - input.length;\n    remainder > 0 && fillOffset(input, remainder);\n    return (t) => {\n        let i = 0;\n        for (; i < length - 2; i++) {\n            if (t < input[i + 1])\n                break;\n        }\n        let progressInRange = clamp(0, 1, progress(input[i], input[i + 1], t));\n        const segmentEasing = getEasingForSegment(easing, i);\n        progressInRange = segmentEasing(progressInRange);\n        return mix(output[i], output[i + 1], progressInRange);\n    };\n}\n\nexport { interpolate };\n","import { isFunction, noopReturn } from '@motionone/utils';\nimport { updateScrollInfo } from './info.es.js';\nimport { resolveOffsets } from './offsets/index.es.js';\n\nfunction measure(container, target = container, info) {\n    /**\n     * Find inset of target within scrollable container\n     */\n    info.x.targetOffset = 0;\n    info.y.targetOffset = 0;\n    if (target !== container) {\n        let node = target;\n        while (node && node != container) {\n            info.x.targetOffset += node.offsetLeft;\n            info.y.targetOffset += node.offsetTop;\n            node = node.offsetParent;\n        }\n    }\n    info.x.targetLength =\n        target === container ? target.scrollWidth : target.clientWidth;\n    info.y.targetLength =\n        target === container ? target.scrollHeight : target.clientHeight;\n    info.x.containerLength = container.clientWidth;\n    info.y.containerLength = container.clientHeight;\n}\nfunction createOnScrollHandler(element, onScroll, info, options = {}) {\n    const axis = options.axis || \"y\";\n    return {\n        measure: () => measure(element, options.target, info),\n        update: (time) => {\n            updateScrollInfo(element, info, time);\n            if (options.offset || options.target) {\n                resolveOffsets(element, info, options);\n            }\n        },\n        notify: isFunction(onScroll)\n            ? () => onScroll(info)\n            : scrubAnimation(onScroll, info[axis]),\n    };\n}\nfunction scrubAnimation(controls, axisInfo) {\n    controls.pause();\n    controls.forEachNative((animation, { easing }) => {\n        var _a, _b;\n        if (animation.updateDuration) {\n            if (!easing)\n                animation.easing = noopReturn;\n            animation.updateDuration(1);\n        }\n        else {\n            const timingOptions = { duration: 1000 };\n            if (!easing)\n                timingOptions.easing = \"linear\";\n            (_b = (_a = animation.effect) === null || _a === void 0 ? void 0 : _a.updateTiming) === null || _b === void 0 ? void 0 : _b.call(_a, timingOptions);\n        }\n    });\n    return () => {\n        controls.currentTime = axisInfo.progress;\n    };\n}\n\nexport { createOnScrollHandler };\n","import { __rest } from 'tslib';\nimport { resize } from '../resize/index.es.js';\nimport { createScrollInfo } from './info.es.js';\nimport { createOnScrollHandler } from './on-scroll-handler.es.js';\n\nconst scrollListeners = new WeakMap();\nconst resizeListeners = new WeakMap();\nconst onScrollHandlers = new WeakMap();\nconst getEventTarget = (element) => element === document.documentElement ? window : element;\nfunction scroll(onScroll, _a = {}) {\n    var { container = document.documentElement } = _a, options = __rest(_a, [\"container\"]);\n    let containerHandlers = onScrollHandlers.get(container);\n    /**\n     * Get the onScroll handlers for this container.\n     * If one isn't found, create a new one.\n     */\n    if (!containerHandlers) {\n        containerHandlers = new Set();\n        onScrollHandlers.set(container, containerHandlers);\n    }\n    /**\n     * Create a new onScroll handler for the provided callback.\n     */\n    const info = createScrollInfo();\n    const containerHandler = createOnScrollHandler(container, onScroll, info, options);\n    containerHandlers.add(containerHandler);\n    /**\n     * Check if there's a scroll event listener for this container.\n     * If not, create one.\n     */\n    if (!scrollListeners.has(container)) {\n        const listener = () => {\n            const time = performance.now();\n            for (const handler of containerHandlers)\n                handler.measure();\n            for (const handler of containerHandlers)\n                handler.update(time);\n            for (const handler of containerHandlers)\n                handler.notify();\n        };\n        scrollListeners.set(container, listener);\n        const target = getEventTarget(container);\n        window.addEventListener(\"resize\", listener, { passive: true });\n        if (container !== document.documentElement) {\n            resizeListeners.set(container, resize(container, listener));\n        }\n        target.addEventListener(\"scroll\", listener, { passive: true });\n    }\n    const listener = scrollListeners.get(container);\n    const onLoadProcesss = requestAnimationFrame(listener);\n    return () => {\n        var _a;\n        if (typeof onScroll !== \"function\")\n            onScroll.stop();\n        cancelAnimationFrame(onLoadProcesss);\n        /**\n         * Check if we even have any handlers for this container.\n         */\n        const containerHandlers = onScrollHandlers.get(container);\n        if (!containerHandlers)\n            return;\n        containerHandlers.delete(containerHandler);\n        if (containerHandlers.size)\n            return;\n        /**\n         * If no more handlers, remove the scroll listener too.\n         */\n        const listener = scrollListeners.get(container);\n        scrollListeners.delete(container);\n        if (listener) {\n            getEventTarget(container).removeEventListener(\"scroll\", listener);\n            (_a = resizeListeners.get(container)) === null || _a === void 0 ? void 0 : _a();\n            window.removeEventListener(\"resize\", listener);\n        }\n    };\n}\n\nexport { scroll };\n","import { scroll } from '@motionone/dom';\nimport { motionValue } from './index.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useEffect } from 'react';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nconst createScrollMotionValues = () => ({\n    scrollX: motionValue(0),\n    scrollY: motionValue(0),\n    scrollXProgress: motionValue(0),\n    scrollYProgress: motionValue(0),\n});\nfunction useScroll({ container, target, layoutEffect = true, ...options } = {}) {\n    const values = useConstant(createScrollMotionValues);\n    const useLifecycleEffect = layoutEffect\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useLifecycleEffect(() => {\n        return scroll(({ x, y }) => {\n            values.scrollX.set(x.current);\n            values.scrollXProgress.set(x.progress);\n            values.scrollY.set(y.current);\n            values.scrollYProgress.set(y.progress);\n        }, {\n            ...options,\n            container: (container === null || container === void 0 ? void 0 : container.current) || undefined,\n            target: (target === null || target === void 0 ? void 0 : target.current) || undefined,\n        });\n    }, []);\n    return values;\n}\n\nexport { useScroll };\n","import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.onChange(setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nfunction useOnChange(value, callback) {\n    useIsomorphicLayoutEffect(() => {\n        if (isMotionValue(value))\n            return value.onChange(callback);\n    }, [callback]);\n}\nfunction useMultiOnChange(values, handler, cleanup) {\n    useIsomorphicLayoutEffect(() => {\n        const subscriptions = values.map((value) => value.onChange(handler));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cleanup();\n        };\n    });\n}\n\nexport { useMultiOnChange, useOnChange };\n","import { useContext, useRef, useMemo } from 'react';\nimport { animate } from 'popmotion';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { useOnChange } from './use-on-change.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\n\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source, config = {}) {\n    const { isStatic } = useContext(MotionConfigContext);\n    const activeSpringAnimation = useRef(null);\n    const value = useMotionValue(isMotionValue(source) ? source.get() : source);\n    useMemo(() => {\n        return value.attach((v, set) => {\n            /**\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n             * at that level, but this will work for now\n             */\n            if (isStatic)\n                return set(v);\n            if (activeSpringAnimation.current) {\n                activeSpringAnimation.current.stop();\n            }\n            activeSpringAnimation.current = animate({\n                from: value.get(),\n                to: v,\n                velocity: value.getVelocity(),\n                ...config,\n                onUpdate: set,\n            });\n            return value.get();\n        });\n    }, [JSON.stringify(config)]);\n    useOnChange(source, (v) => value.set(parseFloat(v)));\n    return value;\n}\n\nexport { useSpring };\n"],"names":["observer","resizeHandlers","WeakMap","notifyTarget","_a","target","contentRect","borderBoxSize","get","forEach","handler","contentSize","size","width","inlineSize","height","blockSize","SVGElement","getBBox","offsetWidth","offsetHeight","getElementSize","notifyAll","entries","resizeElement","ResizeObserver","elements","selectorCache","document","querySelectorAll","Element","Array","from","resolveElements","element","elementHandlers","Set","set","add","observe","delete","unobserve","windowResizeHandler","windowCallbacks","resizeWindow","callback","window","innerWidth","innerHeight","info","addEventListener","undefined","isFunction","value","resize","a","b","progress","min","max","keys","x","length","position","y","updateAxisInfo","axisName","time","axis","prev","current","prevTime","scrollLength","offset","velocity","frameDuration","elapsed","updateScrollInfo","noopReturn","v","mix","fillOffset","remaining","i","offsetProgress","push","defaultOffset","isNumber","getEasingForSegment","easing","isArray","isEasingList","rangeSize","wrap","clamp","Math","ScrollOffset","Enter","Exit","Any","All","isString","namedEdges","start","center","end","resolveEdge","edge","inset","delta","asNumber","parseFloat","endsWith","documentElement","clientWidth","clientHeight","resolveOffset","containerLength","targetLength","targetInset","offsetDefinition","trim","includes","split","point","resolveOffsets","container","options","lengthLabel","HTMLElement","offsetLeft","offsetTop","offsetParent","SVGGraphicsElement","top","left","tagName","parentNode","calcInset","targetSize","scrollWidth","scrollHeight","containerSize","hasChanged","interpolate","numOffsets","interpolatorOffsets","output","input","remainder","t","progressInRange","segmentEasing","measure","targetOffset","node","createOnScrollHandler","onScroll","update","notify","scrubAnimation","controls","axisInfo","pause","forEachNative","animation","_b","updateDuration","timingOptions","duration","effect","updateTiming","call","currentTime","scrollListeners","resizeListeners","onScrollHandlers","getEventTarget","scroll","__rest","containerHandlers","containerHandler","has","listener","performance","now","passive","onLoadProcesss","requestAnimationFrame","stop","cancelAnimationFrame","removeEventListener","createScrollMotionValues","scrollX","motionValue","scrollY","scrollXProgress","scrollYProgress","useScroll","layoutEffect","values","useConstant","useLifecycleEffect","useIsomorphicLayoutEffect","useEffect","useMotionValue","initial","useContext","MotionConfigContext","isStatic","useState","setLatest","onChange","useOnChange","isMotionValue","useSpring","source","config","activeSpringAnimation","useRef","useMemo","attach","animate","to","getVelocity","onUpdate","JSON","stringify"],"sourceRoot":""}